import { type Option, type Options, OptionType, SupportedOption } from './types';
import {
  notImplementedInCompose,
  notYetImplemented,
  processBoolean,
  processLoggingOption,
  processNetworkOption,
  processOptionWithArgs,
  processUlimitOption,
} from './callbacks';

/* eslint-disable */
const OPTIONS: Array<Option> = [
  { name: 'add-host', path: 'extra_hosts', type: OptionType.withArgs, multiValue: true, action: processOptionWithArgs },
  { name: 'attach', short: 'a', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'blkio-weight', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'blkio-weight-device', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'cap-add', path: 'cap_add', type: OptionType.withArgs, multiValue: true, action: processOptionWithArgs },
  { name: 'cap-drop', path: 'cap_drop', type: OptionType.withArgs, multiValue: true, action: processOptionWithArgs },
  { name: 'cgroupns', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'cgroup-parent', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'cidfile', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'cpu-period', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'cpu-quota', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'cpu-rt-period', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'cpu-rt-runtime', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'cpuset-cpus', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'cpus', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'cpuset-mems', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'cpu-shares', short: 'c', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'device', path: 'devices', type: OptionType.withArgs, multiValue: true, action: processOptionWithArgs },
  { name: 'device-cgroup-rule', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'device-read-bps', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'device-read-iops', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'device-write-bps', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'device-write-iops', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'dns', path: 'dns', type: OptionType.withArgs, multiValue: true, action: processOptionWithArgs },
  { name: 'dns-option', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'dns-search', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'domainname', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'entrypoint', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'env', short: 'e', path: 'environment', type: OptionType.withArgs, multiValue: true, action: processOptionWithArgs },
  { name: 'env-file', path: 'env_file', type: OptionType.withArgs, multiValue: true, action: processOptionWithArgs },
  { name: 'expose', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'gpus', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'group-add', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'health-cmd', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'health-interval', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'health-retries', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'health-start-period', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'health-timeout', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'hostname', short: 'h', path: 'hostname', type: OptionType.withArgs, multiValue: false, action: processOptionWithArgs },
  { name: 'ip', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'ip6', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'ipc', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'kernel-memory', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'label-file', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'label', short: 'l', path: 'labels', type: OptionType.withArgs, multiValue: true, action: processOptionWithArgs },
  { name: 'link', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'link-local-ip', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'log-driver', path: 'logging.driver', type: OptionType.withArgs, multiValue: false, action: processOptionWithArgs },
  { name: 'log-opt', path: 'logging.options', type: OptionType.withArgs, multiValue: false, action: processLoggingOption },
  { name: 'mac-address', path: 'mac_address', type: OptionType.withArgs, multiValue: false, action: processOptionWithArgs },
  { name: 'memory', short: 'm', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'memory-swap', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'memory-swappiness', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'memory-reservation', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'mount', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'name', path: 'container_name', type: OptionType.withArgs, multiValue: false, action: processOptionWithArgs },
  { name: 'network', path: 'networks', type: OptionType.withArgs, multiValue: true, action: processNetworkOption },
  { name: 'network-alias', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'oom-score-adj', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'pid', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'pids-limit', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'platform', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'publish', short: 'p', path: 'ports', type: OptionType.withArgs, multiValue: true, action: processOptionWithArgs },
  { name: 'pull', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'restart', path: 'restart', type: OptionType.withArgs, multiValue: false, action: processOptionWithArgs },
  { name: 'runtime', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'security-opt', path: 'security_opt', type: OptionType.withArgs, multiValue: true, action: processOptionWithArgs },
  { name: 'shm-size', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'stop-signal', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'stop-timeout', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'storage-opt', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'tmpfs', path: 'tmpfs', type: OptionType.withArgs, multiValue: true, action: processOptionWithArgs },
  { name: 'sysctl', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'ulimit', path: 'ulimits', type: OptionType.withArgs, multiValue: false, action: processUlimitOption },
  { name: 'user', short: 'u', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'userns', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'uts', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'volume-driver', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'volumes-from', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'volume', short: 'v', path: 'volumes', type: OptionType.withArgs, multiValue: true, action: processOptionWithArgs },
  { name: 'workdir', short: 'w', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'cpu-count', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'cpu-percent', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'io-maxbandwidth', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'io-maxiops', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'isolation', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'detach-keys', path: '', type: OptionType.withArgs, multiValue: false, action: notYetImplemented },
  { name: 'daemon', short: 'd', path: '', type: OptionType.flag, multiValue: false, action: notImplementedInCompose },
  { name: 'disable-content-trust', path: '', type: OptionType.flag, multiValue: false, action: notYetImplemented },
  { name: 'help', path: '', type: OptionType.flag, multiValue: false, action: notImplementedInCompose },
  { name: 'init', path: 'init', type: OptionType.flag, multiValue: false, action: processBoolean },
  { name: 'interactive', short: 'i', path: 'stdin_open', type: OptionType.flag, multiValue: false, action: processBoolean },
  { name: 'no-healthcheck', path: '', type: OptionType.flag, multiValue: false, action: notYetImplemented },
  { name: 'oom-kill-disable', path: '', type: OptionType.flag, multiValue: false, action: notImplementedInCompose },
  { name: 'privileged', path: 'privileged', type: OptionType.flag, multiValue: false, action: processBoolean },
  { name: 'publish-all', short: 'P', path: '', type: OptionType.flag, multiValue: false, action: notYetImplemented },
  { name: 'quiet', short: 'q', path: '', type: OptionType.flag, multiValue: false, action: notYetImplemented },
  { name: 'read-only', path: '', type: OptionType.flag, multiValue: false, action: notYetImplemented },
  { name: 'rm', path: '', type: OptionType.flag, multiValue: false, action: notImplementedInCompose },
  { name: 'tty', short: 't', path: 'tty', type: OptionType.flag, multiValue: false, action: processBoolean },
];
/* eslint-enable */

const AllOptions: Options = {};
OPTIONS.forEach((opt) => (AllOptions[opt.name] = opt));

export const getOption = (optionName: string): Option | undefined =>
  AllOptions[optionName] || OPTIONS.find((o) => o.short === optionName);

export const getSupportedOptions = (): Array<SupportedOption> => {
  const implemented = OPTIONS.filter(
    (opt) => opt.action !== notYetImplemented && opt.action !== notImplementedInCompose
  ).map((opt) => new SupportedOption(opt.name, opt.path, opt.short));
  return implemented;
};
